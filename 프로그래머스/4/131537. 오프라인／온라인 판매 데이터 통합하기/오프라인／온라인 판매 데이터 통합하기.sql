# WITH SALES AS
# (SELECT PRODUCT_ID, SALES_AMOUNT, DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, USER_ID
# FROM ONLINE_SALE
# WHERE SALES_DATE LIKE '2022-03%'
# UNION
# SELECT PRODUCT_ID, SALES_AMOUNT, DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, 'NULL' AS USER_ID
# FROM OFFLINE_SALE
# WHERE SALES_DATE LIKE '2022-03%'
# )

# SELECT SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT
# FROM SALES
# ORDER BY SALES_DATE ASC, PRODUCT_ID ASC, USER_ID ASC

SELECT 
    DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
    , PRODUCT_ID
    , USER_ID
    , SALES_AMOUNT
FROM ONLINE_SALE
WHERE SALES_DATE LIKE ('2022-03%') -- ONLINE_SALE 테이블에 적용 
UNION 
SELECT 
    DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
    , PRODUCT_ID
    , NULL
    , SALES_AMOUNT
FROM OFFLINE_SALE
WHERE SALES_DATE LIKE ('2022-03%') -- 전체 테이블이 아닌, OFFLINE_SALE 테이블에 적용 
ORDER BY 1, 2, 3 -- 병합된 전체 결과에 적용됨
